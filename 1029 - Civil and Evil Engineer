#include<bits/stdc++.h>
using namespace std;
struct edge{

int p,k,d;
};


 int par[101];

 int makeset(int h)
 {
     par[h]=h;
 }

 int fin(int a){

 if(par[a]==a)
 {
     return a;
 }

 else
 {
     par[a]=fin(par[a]);
     return par[a];
 }

 }

 int uni(int a,int b)
 {
     int u=fin(a);
     int v=fin(b);

     if(u==v)
     {
         return 0;
     }
     else
     {
         par[u]=v;
         return 1;
     }
 }

 int main()
 {
     int t;
     cin>>t;

     for(int s=0;s<t;s++)
     {
         int n;
         cin>>n;


         struct edge edges[12000];
         int cnt=0;
         for(int i=0;i<12000;i++)
         {
            int nod1,nod2,w;
            cin>>nod1>>nod2>>w;
             if(nod1==0&&nod2==0&&w==0)
             {
                 break;
             }
             else
             {
                 edges[i].p=nod1;
                 edges[i].k=nod2;
                 edges[i].d=w;
                 cnt=cnt+1;
             }

         }

         for(int i=0;i<n+1;i++)
         {
             makeset(i);
         }

         for(int i=0;i<cnt;i++)
         {
             for(int j=0;j<cnt-1;j++)
             {
                 if(edges[j].d>edges[j+1].d)
                 {
                     swap(edges[j],edges[j+1]);
                 }
             }
         }
         int cost=0,cost1=0;

         for(int i=0;i<cnt;i++)
         {
             if(uni(edges[i].p,edges[i].k)==1)
             {
                 cost=cost+edges[i].d;
             }
         }
         for(int i=0;i<n+1;i++)
         {
             makeset(i);
         }
         for(int i=cnt-1;i>=0;i--)
         {
             if(uni(edges[i].p,edges[i].k)==1)
             {
                 cost1=cost1+edges[i].d;
             }
         }
         int result=(cost+cost1)/2;
         if((cost+cost1)%2==0)
         {
             cout<<"Case "<<s+1<<": "<<(cost+cost1)/2<<endl;
         }

         else
         {
             cout<<"Case "<<s+1<<": "<<cost+cost1<<"/"<<"2"<<endl;
         }






     }
 }
